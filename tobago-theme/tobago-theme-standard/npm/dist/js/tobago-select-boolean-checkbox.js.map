{"version":3,"file":"tobago-select-boolean-checkbox.js","sourceRoot":"../ts/","sources":["tobago-select-boolean-checkbox.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AAGH,OAAO,EAAC,KAAK,EAAC,MAAM,gBAAgB,CAAC;AAErC,MAAM,OAAO,qBAAsB,SAAQ,WAAW;IAEpD;QACE,KAAK,EAAE,CAAC;IACV,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC;QAE3D,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACvB,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;SACpD;QAED,SAAS,YAAY,CAAC,KAAiB;YACrC,qFAAqF;YACrF,KAAK,CAAC,cAAc,EAAE,CAAC;QACzB,CAAC;IACH,CAAC;IAED,IAAI,KAAK;QACP,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAA2B,CAAC;QAC7D,OAAO,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,GAAG,SAAS,CAAqB,CAAC;IAC1E,CAAC;CACF;AAED,QAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE,UAAU,KAAY;IAC7D,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,gCAAgC,CAAC,IAAI,IAAI,EAAE;QACvE,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,gCAAgC,EAAE,qBAAqB,CAAC,CAAC;KACvF;AACH,CAAC,CAAC,CAAC","sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DomUtils} from \"./tobago-utils\";\nimport {Focus} from \"./tobago-focus\";\n\nexport class SelectBooleanCheckbox extends HTMLElement {\n\n  constructor() {\n    super();\n  }\n\n  connectedCallback(): void {\n    this.field.addEventListener(\"focus\", Focus.setLastFocusId);\n\n    if (this.field.readOnly) {\n      this.field.addEventListener(\"click\", preventClick);\n    }\n\n    function preventClick(event: MouseEvent): void {\n      // in the \"readonly\" case, prevent the default, which is changing the \"checked\" state\n      event.preventDefault();\n    }\n  }\n\n  get field(): HTMLInputElement {\n    const rootNode = this.getRootNode() as ShadowRoot | Document;\n    return rootNode.getElementById(this.id + \"::field\") as HTMLInputElement;\n  }\n}\n\ndocument.addEventListener(\"tobago.init\", function (event: Event): void {\n  if (window.customElements.get(\"tobago-select-boolean-checkbox\") == null) {\n    window.customElements.define(\"tobago-select-boolean-checkbox\", SelectBooleanCheckbox);\n  }\n});\n"]}