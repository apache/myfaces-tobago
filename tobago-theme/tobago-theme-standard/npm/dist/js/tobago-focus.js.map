{"version":3,"file":"tobago-focus.js","sourceRoot":"../ts/","sources":["tobago-focus.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Page} from \"./tobago-page\";\nimport {DomUtils} from \"./tobago-utils\";\n\nexport class Focus extends HTMLElement {\n\n  /**\n   * The focusListener to set the lastFocusId must be implemented in the appropriate web elements.\n   * @param event\n   */\n  static setLastFocusId(event: FocusEvent): void {\n    const target = event.target as HTMLElement;\n    const computedStyle = getComputedStyle(target);\n\n    if (target.getAttribute(\"type\") !== \"hidden\"\n        && target.getAttributeNames().indexOf(\"disabled\") === -1\n        && target.getAttribute(\"tabindex\") !== \"-1\"\n        && computedStyle.visibility !== \"hidden\"\n        && computedStyle.display !== \"none\") {\n      const root = target.getRootNode() as ShadowRoot | Document;\n      const tobagoFocus = root.getElementById(Page.page(target).id + \"::lastFocusId\");\n      tobagoFocus.querySelector(\"input\").value = target.id;\n    }\n  }\n\n  constructor() {\n    super();\n  }\n\n  /**\n   * Sets the focus to the requested element or to the first possible if\n   * no element is explicitly requested.\n   *\n   * The priority order is:\n   * - error (the first error element gets the focus)\n   * - auto (the element with the tobago tag attribute focus=\"true\" gets the focus)\n   * - last (the element from the last request with same id gets the focus, not AJAX)\n   * - first (the first input element (without tabindex=-1) gets the focus, not AJAX)\n   */\n  connectedCallback(): void {\n    const errorElement = this.errorElement;\n    if (errorElement) {\n      errorElement.focus();\n      return;\n    }\n\n    if (this.autofocusElements.length > 0) {\n      // nothing to do, because the browser make the work.\n      return;\n    }\n\n    const lastFocusedElement = this.lastFocusedElement;\n    if (lastFocusedElement) {\n      lastFocusedElement.focus();\n      return;\n    }\n\n    const focusableElement = this.focusableElement;\n    if (focusableElement) {\n      focusableElement.focus();\n      return;\n    }\n  }\n\n  private get errorElement(): HTMLElement {\n    const root = this.getRootNode() as ShadowRoot | Document;\n    const elements = root.querySelectorAll(\n        \".tobago-messages-container .border-danger:not([disabled]):not([tabindex='-1'])\") as NodeListOf<HTMLElement>;\n\n    for (const element of elements) {\n      const computedStyle = getComputedStyle(element);\n      if (computedStyle.display !== \"none\" && computedStyle.visibility !== \"hidden\") {\n        return element;\n      }\n    }\n  }\n\n  private get autofocusElements(): NodeListOf<HTMLElement> {\n    const root = this.getRootNode() as ShadowRoot | Document;\n    return root.querySelectorAll(\"[autofocus]\");\n  }\n\n  private get lastFocusedElement(): HTMLElement {\n    const lastFocusId: string = this.hiddenInput.value;\n    if (lastFocusId) {\n      const root = this.getRootNode() as ShadowRoot | Document;\n      return root.getElementById(lastFocusId);\n    } else {\n      return null;\n    }\n  }\n\n  private get hiddenInput(): HTMLInputElement {\n    return this.querySelector(\"input\");\n  }\n\n  private get focusableElement(): HTMLElement {\n    const root = this.getRootNode() as ShadowRoot | Document;\n    const elements = root.querySelectorAll(\n        \"input:not([type='hidden']):not([disabled]):not([tabindex='-1']),\" +\n        \"select:not([disabled]):not([tabindex='-1']),\" +\n        \"textarea:not([disabled]):not([tabindex='-1'])\") as NodeListOf<HTMLElement>;\n\n    for (const element of elements) {\n      if (this.isVisible(element)) {\n        return element;\n      }\n    }\n  }\n\n  private isVisible(element: HTMLElement): boolean {\n    const computedStyle = getComputedStyle(element);\n    if (computedStyle.display === \"none\" || computedStyle.visibility === \"hidden\") {\n      return false;\n    } else if (element.parentElement) {\n      return this.isVisible(element.parentElement);\n    } else {\n      return true;\n    }\n  }\n}\n\ndocument.addEventListener(\"tobago.init\", function (event: Event): void {\n  if (window.customElements.get(\"tobago-focus\") == null) {\n    window.customElements.define(\"tobago-focus\", Focus);\n  }\n});\n"]}