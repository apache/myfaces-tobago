{"version":3,"file":"tobago-select-many-checkbox.js","sourceRoot":"../ts/","sources":["tobago-select-many-checkbox.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;GAeG;AAEH,OAAO,EAAC,KAAK,EAAC,MAAM,gBAAgB,CAAC;AAErC,MAAM,kBAAmB,SAAQ,WAAW;IAE1C;QACE,KAAK,EAAE,CAAC;IACV,CAAC;IAED,iBAAiB;QACf,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE;YAC/B,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,CAAC,cAAc,CAAC,CAAC;YAEtD,IAAI,KAAK,CAAC,QAAQ,EAAE;gBAClB,KAAK,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;aAC/C;YAED,SAAS,YAAY,CAAC,KAAiB;gBACrC,qFAAqF;gBACrF,KAAK,CAAC,cAAc,EAAE,CAAC;YACzB,CAAC;SACF;IACH,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,gBAAgB,CAAC,cAAc,GAAG,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,CAAC;IAChE,CAAC;CACF;AAED,QAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE,UAAU,KAAY;IAC7D,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,6BAA6B,CAAC,IAAI,IAAI,EAAE;QACpE,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,6BAA6B,EAAE,kBAAkB,CAAC,CAAC;KACjF;AACH,CAAC,CAAC,CAAC","sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Focus} from \"./tobago-focus\";\n\nclass SelectManyCheckbox extends HTMLElement {\n\n  constructor() {\n    super();\n  }\n\n  connectedCallback(): void {\n    for (const input of this.inputs) {\n      input.addEventListener(\"focus\", Focus.setLastFocusId);\n\n      if (input.readOnly) {\n        input.addEventListener(\"click\", preventClick);\n      }\n\n      function preventClick(event: MouseEvent): void {\n        // in the \"readonly\" case, prevent the default, which is changing the \"checked\" state\n        event.preventDefault();\n      }\n    }\n  }\n\n  get inputs(): NodeListOf<HTMLInputElement> {\n    return this.querySelectorAll(\"input[name='\" + this.id + \"']\");\n  }\n}\n\ndocument.addEventListener(\"tobago.init\", function (event: Event): void {\n  if (window.customElements.get(\"tobago-select-many-checkbox\") == null) {\n    window.customElements.define(\"tobago-select-many-checkbox\", SelectManyCheckbox);\n  }\n});\n"]}