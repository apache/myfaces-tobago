{"version":3,"file":"tobago-sheet.js","sourceRoot":"../ts/","sources":["tobago-sheet.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DomUtils} from \"./tobago-utils\";\nimport {Page} from \"./tobago-page\";\n\nexport class Sheet extends HTMLElement {\n\n  static readonly SCROLL_BAR_SIZE: number = Sheet.getScrollBarSize();\n\n  mousemoveData: any;\n  mousedownOnRowData: any;\n\n  lastCheckMillis: number;\n\n  private static getScrollBarSize(): number {\n    const body = document.getElementsByTagName(\"body\").item(0);\n\n    const outer = document.createElement(\"div\");\n    outer.style.visibility = \"hidden\";\n    outer.style.width = \"100px\";\n    outer.style.overflow = \"scroll\";\n    body.append(outer);\n\n    const inner = document.createElement(\"div\");\n    inner.style.width = \"100%\";\n    outer.append(inner);\n    const widthWithScroll = inner.offsetWidth;\n\n    body.removeChild(outer);\n\n    return 100 - widthWithScroll;\n  }\n\n  private static isInputElement(element: HTMLElement): boolean {\n    return [\"INPUT\", \"TEXTAREA\", \"SELECT\", \"A\", \"BUTTON\"].indexOf(element.tagName) > -1;\n  }\n\n  private static getRowTemplate(columns: number, rowIndex: number) : string {\n    return `<tr row-index=\"${rowIndex}\" class=\"tobago-sheet-row\" dummy=\"dummy\">\n<td class=\"tobago-sheet-cell\" colspan=\"${columns}\"> </td>\n</tr>`;\n  }\n\n  constructor() {\n    super();\n  }\n\n  connectedCallback(): void {\n\n    if (this.lazyUpdate) {\n      // nothing to do here, will be done in method lazyResponse()\n      return;\n    }\n\n    // synchronize column widths ----------------------------------------------------------------------------------- //\n\n    // basic idea: there are two possible sources for the sizes:\n    // 1. the columns attribute of <tc:sheet> like {\"columns\":[1.0,1.0,1.0]}, held by data attribute \"tobago-layout\"\n    // 2. the hidden field which may contain a value like \",300,200,100,\"\n    //\n    // The 1st source usually is the default set by the developer.\n    // The 2nd source usually is the value set by the user manipulating the column widths.\n    //\n    // So, if the 2nd is set, we use it, if not set, we use the 1st source.\n\n    let columnWidths = this.loadColumnWidths();\n    console.info(\"columnWidths: %s\", JSON.stringify(columnWidths));\n    if (columnWidths && columnWidths.length === 0) { // active, but empty\n      // otherwise use the layout definition\n      const tokens = JSON.parse(this.dataset.tobagoLayout).columns;\n      const columnRendered = this.isColumnRendered();\n\n      const headerCols = this.getHeaderCols();\n      const bodyTable = this.getBodyTable();\n      const bodyCols = this.getBodyCols();\n\n      console.assert(headerCols.length - 1 === bodyCols.length,\n          \"header and body column number doesn't match: %d != %d \", headerCols.length - 1, bodyCols.length);\n\n      let sumRelative = 0; // tbd: is this needed?\n      let widthRelative = bodyTable.offsetWidth;\n      let r = 0;\n      for (let i = 0; i < tokens.length; i++) {\n        if (columnRendered[i]) {\n          if (typeof tokens[i] === \"number\") {\n            sumRelative += tokens[i];\n          } else if (typeof tokens[i] === \"object\" && tokens[i].measure !== undefined) {\n            const intValue = parseInt(tokens[i].measure);\n            if (tokens[i].measure.lastIndexOf(\"px\") > 0) {\n              widthRelative -= intValue;\n            } else if (tokens[i].measure.lastIndexOf(\"%\") > 0) {\n              widthRelative -= bodyTable.offsetWidth * intValue / 100;\n            }\n          } else if(tokens[i] === \"auto\") {\n            let value = headerCols.item(r).offsetWidth;\n            widthRelative -= value;\n            tokens[i] = {measure: value + \"px\"}; // converting \"auto\" to a specific value\n          } else {\n            console.debug(\"(layout columns a) auto? token[i]='%s' i=%i\", tokens[i], i);\n          }\n        }\n      }\n      if (widthRelative < 0) {\n        widthRelative = 0;\n      }\n\n      r = 0;\n      for (let i = 0; i < tokens.length; i++) {\n        let colWidth = 0;\n        if (columnRendered[i]) {\n          if (typeof tokens[i] === \"number\") {\n            colWidth = tokens[i] * widthRelative / sumRelative;\n          } else if (typeof tokens[i] === \"object\" && tokens[i].measure !== undefined) {\n            const intValue = parseInt(tokens[i].measure);\n            if (tokens[i].measure.lastIndexOf(\"px\") > 0) {\n              colWidth = intValue;\n            } else if (tokens[i].measure.lastIndexOf(\"%\") > 0) {\n              colWidth = bodyTable.offsetWidth * intValue / 100;\n            }\n          } else {\n            console.debug(\"(layout columns b) auto? token[i]='%s' i=%i\", tokens[i], i);\n          }\n          if (colWidth > 0) { // because tokens[i] == \"auto\"\n            headerCols.item(r).setAttribute(\"width\", String(colWidth));\n            bodyCols.item(r).setAttribute(\"width\", String(colWidth));\n          }\n          r++;\n        }\n      }\n    }\n    this.addHeaderFillerWidth();\n\n    // resize column: mouse events -------------------------------------------------------------------------------- //\n\n    for (const resizeElement of <NodeListOf<HTMLElement>>this.querySelectorAll(\".tobago-sheet-headerResize\")) {\n      resizeElement.addEventListener(\"click\", function (): boolean {\n        return false;\n      });\n      resizeElement.addEventListener(\"mousedown\", this.mousedown.bind(this));\n    }\n\n    // scrolling -------------------------------------------------------------------------------------------------- //\n    const sheetBody = this.getBody();\n\n    // restore scroll position\n    const value: number[] = JSON.parse(this.getHiddenScrollPosition().getAttribute(\"value\"));\n    sheetBody.scrollLeft = value[0];\n    sheetBody.scrollTop = value[1];\n\n    this.syncScrolling();\n\n    // scroll events\n    sheetBody.addEventListener(\"scroll\", this.scroll.bind(this));\n\n    // add selection listeners ------------------------------------------------------------------------------------ //\n    const selectionMode = this.dataset.tobagoSelectionMode;\n    if (selectionMode === \"single\" || selectionMode === \"singleOrNone\" || selectionMode === \"multi\") {\n\n      for (const row of this.getRowElements()) {\n        row.addEventListener(\"mousedown\", this.mousedownOnRow.bind(this));\n\n        row.addEventListener(\"click\", this.clickOnRow.bind(this));\n      }\n    }\n\n    for (const checkbox of <NodeListOf<HTMLInputElement>>this.querySelectorAll(\n        \".tobago-sheet-cell > input.tobago-sheet-columnSelector\")) {\n      checkbox.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n      });\n    }\n\n    // lazy load by scrolling ----------------------------------------------------------------- //\n\n      const lazy = this.lazy;\n\n      if (lazy) {\n        // prepare the sheet with some auto-created (empty) rows\n        const rowCount = this.rowCount;\n        const sheetBody = this.tableBodyDiv;\n        const tableBody = this.tableBody;\n        const columns = tableBody.rows[0].cells.length;\n        let current: HTMLTableRowElement = tableBody.rows[0]; // current row in this algorithm, begin with first\n        // the algorithm goes straight through all rows, not selectors, because of performance\n        for (let i = 0; i < rowCount; i++) {\n          if (current) {\n            const rowIndex = Number(current.getAttribute(\"row-index\"));\n            if (i < rowIndex) {\n              const template = Sheet.getRowTemplate(columns, i);\n              current.insertAdjacentHTML(\"beforebegin\", template);\n            } else if (i === rowIndex) {\n              current = current.nextElementSibling as HTMLTableRowElement;\n            // } else { TBD: I think this is not possible\n            //   const template = Sheet.getRowTemplate(columns, i);\n            //   current.insertAdjacentHTML(\"afterend\", template);\n            //   current = current.nextElementSibling as HTMLTableRowElement;\n            }\n          } else {\n            const template = Sheet.getRowTemplate(columns, i);\n            tableBody.insertAdjacentHTML(\"beforeend\", template);\n          }\n        }\n\n        sheetBody.addEventListener(\"scroll\", this.lazyCheck.bind(this));\n\n        // initial\n        this.lazyCheck();\n      }\n\n    // ---------------------------------------------------------------------------------------- //\n\n    for (const checkbox of <NodeListOf<HTMLInputElement>>this.querySelectorAll(\n        \".tobago-sheet-header .tobago-sheet-columnSelector\")) {\n      checkbox.addEventListener(\"click\", this.clickOnCheckbox.bind(this));\n    }\n\n    // init paging by pages ---------------------------------------------------------------------------------------- //\n\n    for (const pagingText of <NodeListOf<HTMLElement>>this.querySelectorAll(\".tobago-sheet-pagingText\")) {\n\n      pagingText.addEventListener(\"click\", this.clickOnPaging.bind(this));\n\n      const pagingInput = pagingText.querySelector(\"input.tobago-sheet-pagingInput\");\n      pagingInput.addEventListener(\"blur\", this.blurPaging.bind(this));\n\n      pagingInput.addEventListener(\"keydown\", function (event: KeyboardEvent): void {\n        if (event.keyCode === 13) {\n          event.stopPropagation();\n          event.preventDefault();\n          event.currentTarget.dispatchEvent(new Event(\"blur\"));\n        }\n      });\n    }\n  }\n\n  // attribute getter + setter ---------------------------------------------------------- //\n\n  get lazyActive():boolean {\n    return this.hasAttribute(\"lazy-active\");\n  }\n\n  set lazyActive(update:boolean) {\n    if (update) {\n      this.setAttribute(\"lazy-active\", \"\");\n    } else {\n      this.removeAttribute(\"lazy-active\");\n    }\n  }\n\n  get lazy():boolean {\n    return this.hasAttribute(\"lazy\");\n  }\n\n  set lazy(update:boolean) {\n    if (update) {\n      this.setAttribute(\"lazy\", \"\");\n    } else {\n      this.removeAttribute(\"lazy\");\n    }\n  }\n\n  get lazyUpdate():boolean {\n    return this.hasAttribute(\"lazy-update\");\n  }\n\n  get rows():number {\n    return parseInt(this.getAttribute(\"rows\"));\n  }\n\n  get rowCount():number {\n    return parseInt(this.getAttribute(\"row-count\"));\n  }\n\n  get tableBodyDiv(): HTMLDivElement {\n    return this.querySelector(\".tobago-sheet-body\");\n  }\n\n  get tableBody(): HTMLTableSectionElement {\n    return this.querySelector(\".tobago-sheet-bodyTable>tbody\");\n  }\n\n  // -------------------------------------------------------------------------------------- //\n\n  /*\n    when an event occurs (initial load OR scroll event OR AJAX response)\n\n    then -> Tobago.Sheet.lazyCheck()\n            1. check, if the lazy reload is currently active\n               a) yes -> do nothing and exit\n               b) no  -> step 2.\n            2. check, if there are data need to load (depends on scroll position and already loaded data)\n               a) yes -> set lazy reload to active and make an AJAX request with Tobago.Sheet.reloadLazy()\n               b) no  -> do nothing and exit\n\n     AJAX response -> 1. update the rows in the sheet from the response\n                      2. go to the first part of this description\n  */\n\n  /**\n   * Checks if a lazy update is required, because there are unloaded rows in the visible area.\n   */\n  lazyCheck(event?): void {\n\n    if (this.lazyActive) {\n      // nothing to do, because there is an active AJAX running\n      return;\n    }\n\n    if (this.lastCheckMillis && Date.now() - this.lastCheckMillis < 100) {\n      // do nothing, because the last call was just a moment ago\n      return;\n    }\n\n    this.lastCheckMillis = Date.now();\n    const next = this.nextLazyLoad();\n    // console.info(\"next %o\", next); // @DEV_ONLY\n    if (next) {\n      this.lazyActive = true;\n      const rootNode = this.getRootNode() as ShadowRoot | Document;\n      const input = rootNode.getElementById(this.id + \":pageActionlazy\") as HTMLInputElement;\n      input.value = String(next);\n      this.reloadWithAction(input);\n    }\n  }\n\n  nextLazyLoad(): number {\n    // find first tr in current visible area\n    const rows = this.rows;\n    const rowElements = this.tableBody.rows;\n    let min = 0;\n    let max = rowElements.length;\n    // binary search\n    let i;\n    while (min < max) {\n      i = Math.floor((max - min) / 2) + min;\n      // console.log(\"min i max -> %d %d %d\", min, i, max); // @DEV_ONLY\n      if (this.isRowAboveVisibleArea(rowElements[i])) {\n        min = i + 1;\n      } else {\n        max = i;\n      }\n    }\n    for (i = min; i < min + rows && i < rowElements.length; i++) {\n      if (this.isRowDummy(rowElements[i])) {\n        return i + 1;\n      }\n    }\n\n    return null;\n  }\n\n  isRowAboveVisibleArea(tr: HTMLTableRowElement): boolean {\n    const sheetBody = this.tableBodyDiv;\n    const viewStart = sheetBody.scrollTop;\n    const trEnd = tr.offsetTop + tr.clientHeight;\n    return trEnd < viewStart;\n  }\n\n  isRowDummy(tr): boolean {\n    return tr.hasAttribute(\"dummy\");\n  }\n\n  lazyResponse(event): void {\n    let updates;\n    if (event.status === \"complete\") {\n      updates = event.responseXML.querySelectorAll(\"update\");\n      for (let i = 0; i < updates.length; i++) {\n        const update = updates[i];\n        const id = update.getAttribute(\"id\");\n        if (id.indexOf(\":\") > -1) { // is a JSF element id, but not a technical id from the framework\n          console.debug(\"[tobago-sheet][complete] Update after jsf.ajax complete: #\" + id); // @DEV_ONLY\n\n          const sheet = document.getElementById(id);\n          sheet.id = id + \"::lazy-temporary\";\n\n          const page = Page.page(this);\n          page.insertAdjacentHTML(\"beforeend\", `<div id=\"${id}\"></div>`);\n          const sheetLoader = document.getElementById(id);\n        }\n      }\n    } else if (event.status === \"success\") {\n      updates = event.responseXML.querySelectorAll(\"update\");\n      for (let i = 0; i < updates.length; i++) {\n        const update = updates[i];\n        const id = update.getAttribute(\"id\");\n        if (id.indexOf(\":\") > -1) { // is a JSF element id, but not a technical id from the framework\n          console.debug(\"[tobago-sheet][success] Update after jsf.ajax complete: #\" + id); // @DEV_ONLY\n\n          // sync the new rows into the sheet\n          const sheetLoader = document.getElementById(id);\n          const sheet = document.getElementById(id + \"::lazy-temporary\");\n          sheet.id = id;\n          const tbody = sheet.querySelector(\".tobago-sheet-bodyTable>tbody\");\n\n          const newRows = sheetLoader.querySelectorAll(\".tobago-sheet-bodyTable>tbody>tr\");\n          for (i = 0; i < newRows.length; i++) {\n            const newRow = newRows[i];\n            const rowIndex = Number(newRow.getAttribute(\"row-index\"));\n            const row = tbody.querySelector(\"tr[row-index='\" + rowIndex + \"']\");\n            // replace the old row with the new row\n            row.insertAdjacentElement(\"afterend\", newRow);\n            tbody.removeChild(row);\n          }\n\n          sheetLoader.parentElement.removeChild(sheetLoader);\n          this.lazyActive = false;\n        }\n      }\n    }\n  }\n\n  lazyError(data): void {\n    console.error(\"Sheet lazy loading error:\"\n        + \"\\nError Description: \" + data.description\n        + \"\\nError Name: \" + data.errorName\n        + \"\\nError errorMessage: \" + data.errorMessage\n        + \"\\nResponse Code: \" + data.responseCode\n        + \"\\nResponse Text: \" + data.responseText\n        + \"\\nStatus: \" + data.status\n        + \"\\nType: \" + data.type);\n  }\n\n  // tbd: how to do this in Tobago 5?\n  reloadWithAction(source: HTMLElement): void {\n    console.debug(\"reload sheet with action '\" + source.id + \"'\"); // @DEV_ONLY\n    const executeIds = this.id;\n    const renderIds = this.id;\n    const lazy = this.lazy;\n\n    jsf.ajax.request(\n        source.id,\n        null,\n        {\n          \"javax.faces.behavior.event\": \"reload\",\n          execute: executeIds,\n          render: renderIds,\n          onevent: lazy ? this.lazyResponse.bind(this) : undefined,\n          onerror: lazy ? this.lazyError.bind(this) : undefined\n        });\n  }\n\n  loadColumnWidths(): number[] {\n    const hidden = document.getElementById(this.id + \"::widths\");\n    if (hidden) {\n      return JSON.parse(hidden.getAttribute(\"value\"));\n    } else {\n      return undefined;\n    }\n  }\n\n  saveColumnWidths(widths: number[]): void {\n    const hidden = document.getElementById(this.id + \"::widths\");\n    if (hidden) {\n      hidden.setAttribute(\"value\", JSON.stringify(widths));\n    } else {\n      console.warn(\"ignored, should not be called, id='\" + this.id + \"'\");\n    }\n  }\n\n  isColumnRendered(): boolean[] {\n    const hidden = document.getElementById(this.id + \"::rendered\");\n    return JSON.parse(hidden.getAttribute(\"value\"));\n  }\n\n  addHeaderFillerWidth(): void {\n    const last = document.getElementById(this.id).querySelector(\".tobago-sheet-headerTable col:last-child\");\n    if (last) {\n      last.setAttribute(\"width\", String(Sheet.SCROLL_BAR_SIZE));\n    }\n  }\n\n  mousedown(event: MouseEvent): void {\n\n    Page.page(this).dataset.SheetMousedownData = this.id;\n\n    // begin resizing\n    console.debug(\"down\");\n\n    const resizeElement = event.currentTarget as HTMLElement;\n    const columnIndex = parseInt(resizeElement.dataset.tobagoColumnIndex);\n    const headerColumn = this.getHeaderCols().item(columnIndex);\n    const mousemoveListener = this.mousemove.bind(this);\n    const mouseupListener = this.mouseup.bind(this);\n    this.mousemoveData = {\n      columnIndex: columnIndex,\n      originalClientX: event.clientX,\n      originalHeaderColumnWidth: parseInt(headerColumn.getAttribute(\"width\")),\n      mousemoveListener: mousemoveListener,\n      mouseupListener: mouseupListener\n    };\n\n    document.addEventListener(\"mousemove\", mousemoveListener);\n    document.addEventListener(\"mouseup\", mouseupListener);\n  }\n\n  mousemove(event: MouseEvent): boolean {\n    console.debug(\"move\");\n    let delta = event.clientX - this.mousemoveData.originalClientX;\n    delta = -Math.min(-delta, this.mousemoveData.originalHeaderColumnWidth - 10);\n    let columnWidth = this.mousemoveData.originalHeaderColumnWidth + delta;\n    this.getHeaderCols().item(this.mousemoveData.columnIndex).setAttribute(\"width\", columnWidth);\n    this.getBodyCols().item(this.mousemoveData.columnIndex).setAttribute(\"width\", columnWidth);\n    if (window.getSelection) {\n      window.getSelection().removeAllRanges();\n    }\n    return false;\n  }\n\n  mouseup(event: MouseEvent): boolean {\n    console.debug(\"up\");\n\n    // switch off the mouse move listener\n    document.removeEventListener(\"mousemove\", this.mousemoveData.mousemoveListener);\n    document.removeEventListener(\"mouseup\", this.mousemoveData.mouseupListener);\n    // copy the width values from the header to the body, (and build a list of it)\n    const tokens = JSON.parse(this.dataset.tobagoLayout).columns;\n    const columnRendered = this.isColumnRendered();\n    const columnWidths = this.loadColumnWidths();\n\n    const bodyTable = this.getBodyTable();\n    const headerCols = this.getHeaderCols();\n    const bodyCols = this.getBodyCols();\n    const widths: number[] = [];\n    let usedWidth = 0;\n    let headerBodyColCount = 0;\n    for (let i = 0; i < columnRendered.length; i++) {\n      if (columnRendered[i]) {\n        // last column is the filler column\n        const newWidth = parseInt(headerCols.item(headerBodyColCount).getAttribute(\"width\"));\n        // for the hidden field\n        widths[i] = newWidth;\n        usedWidth += newWidth;\n\n        const oldWidth = parseInt(bodyCols.item(headerBodyColCount).getAttribute(\"width\"));\n        if (oldWidth !== newWidth) {\n          bodyCols.item(headerBodyColCount).setAttribute(\"width\", String(newWidth));\n        }\n        headerBodyColCount++;\n      } else if (columnWidths !== undefined && columnWidths.length >= i) {\n        widths[i] = columnWidths[i];\n      } else {\n        if (typeof tokens[i] === \"number\") {\n          widths[i] = 100;\n        } else if (typeof tokens[i] === \"object\" && tokens[i].measure !== undefined) {\n          const intValue = parseInt(tokens[i].measure);\n          if (tokens[i].measure.lastIndexOf(\"px\") > 0) {\n            widths[i] = intValue;\n          } else if (tokens[i].measure.lastIndexOf(\"%\") > 0) {\n            widths[i] = parseInt(bodyTable.style.width) / 100 * intValue;\n          }\n        }\n      }\n    }\n\n    // store the width values in a hidden field\n    this.saveColumnWidths(widths);\n    return false;\n  }\n\n  scroll(event): void {\n    console.debug(\"scroll\");\n\n    const sheetBody: HTMLElement = event.currentTarget;\n\n    this.syncScrolling();\n\n    // store the position in a hidden field\n    const hidden = this.getHiddenScrollPosition();\n    hidden.setAttribute(\"value\",\n        JSON.stringify([Math.round(sheetBody.scrollLeft), Math.round(sheetBody.scrollTop)]));\n  }\n\n  mousedownOnRow(event: MouseEvent): void {\n    console.debug(\"mousedownOnRow\");\n    this.mousedownOnRowData = {\n      x: event.clientX,\n      y: event.clientY\n    };\n  }\n\n  clickOnCheckbox(event: MouseEvent): void {\n    const checkbox = event.currentTarget as HTMLInputElement;\n    if (checkbox.checked) {\n      this.selectAll();\n    } else {\n      this.deselectAll();\n    }\n  }\n\n  clickOnRow(event: MouseEvent): void {\n\n    const row = event.currentTarget as HTMLTableRowElement;\n    if (row.classList.contains(\"tobago-sheet-columnSelector\") || !Sheet.isInputElement(row)) {\n\n      if (Math.abs(this.mousedownOnRowData.x - event.clientX)\n          + Math.abs(this.mousedownOnRowData.y - event.clientY) > 5) {\n        // The user has moved the mouse. We assume, the user want to select some text inside the sheet,\n        // so we doesn't select the row.\n        return;\n      }\n\n      if (window.getSelection) {\n        window.getSelection().removeAllRanges();\n      }\n\n      const rows = this.getRowElements();\n      const selector = this.getSelectorCheckbox(row);\n      const selectionMode = this.dataset.tobagoSelectionMode;\n\n      if ((!event.ctrlKey && !event.metaKey && !selector)\n          || selectionMode === \"single\" || selectionMode === \"singleOrNone\") {\n        this.deselectAll();\n        this.resetSelected();\n      }\n\n      const lastClickedRowIndex = parseInt(this.dataset.tobagoLastClickedRowIndex);\n      if (event.shiftKey && selectionMode === \"multi\" && lastClickedRowIndex > -1) {\n        if (lastClickedRowIndex <= row.sectionRowIndex) {\n          this.selectRange(rows, lastClickedRowIndex, row.sectionRowIndex, true, false);\n        } else {\n          this.selectRange(rows, row.sectionRowIndex, lastClickedRowIndex, true, false);\n        }\n      } else if (selectionMode !== \"singleOrNone\" || !this.isRowSelected(row)) {\n        this.toggleSelection(row, selector);\n      }\n    }\n  }\n\n  clickOnPaging(event: MouseEvent): void {\n    const element = event.currentTarget as HTMLElement;\n\n    const output = element.querySelector(\".tobago-sheet-pagingOutput\") as HTMLElement;\n    output.style.display = \"none\";\n\n    const input = element.querySelector(\".tobago-sheet-pagingInput\") as HTMLInputElement;\n    input.style.display = \"initial\";\n    input.focus();\n    input.select();\n  }\n\n  blurPaging(event: FocusEvent): void {\n    const input = event.currentTarget as HTMLInputElement;\n    const output = input.parentElement.querySelector(\".tobago-sheet-pagingOutput\") as HTMLElement;\n    if (output.innerHTML !== input.value) {\n      console.debug(\n          \"Reloading sheet '\" + this.id + \"' old value='\" + output.innerHTML + \"' new value='\" + input.value + \"'\");\n      output.innerHTML = input.value;\n      jsf.ajax.request(\n          input.id,\n          null,\n          {\n            \"javax.faces.behavior.event\": \"reload\",\n            execute: this.id,\n            render: this.id\n          });\n    } else {\n      console.info(\"no update needed\");\n      input.style.display = \"none\";\n      output.style.display = \"initial\";\n    }\n  }\n\n  syncScrolling(): void {\n    // sync scrolling of body to header\n    const header = this.getHeader();\n    if (header) {\n      header.scrollLeft = this.getBody().scrollLeft;\n    }\n  }\n\n  getHeader(): HTMLElement {\n    return this.querySelector(\"tobago-sheet>header\");\n  }\n\n  getHeaderTable(): HTMLElement {\n    return this.querySelector(\"tobago-sheet>header>table\");\n  }\n\n  getHeaderCols(): NodeListOf<HTMLElement> {\n    return this.querySelectorAll(\"tobago-sheet>header>table>colgroup>col\");\n  }\n\n  getBody(): HTMLElement {\n    return this.querySelector(\"tobago-sheet>.tobago-sheet-body\");\n  }\n\n  getBodyTable(): HTMLElement {\n    return this.querySelector(\"tobago-sheet>.tobago-sheet-body>.tobago-sheet-bodyTable\");\n  }\n\n  getBodyCols(): NodeListOf<HTMLElement> {\n    return this.querySelectorAll(\"tobago-sheet>.tobago-sheet-body>.tobago-sheet-bodyTable>colgroup>col\");\n  }\n\n  getHiddenSelected(): HTMLInputElement {\n    const rootNode = this.getRootNode() as ShadowRoot | Document;\n    return rootNode.getElementById(this.id + \"::selected\")  as HTMLInputElement;\n  }\n\n  getHiddenScrollPosition(): HTMLInputElement {\n    const rootNode = this.getRootNode() as ShadowRoot | Document;\n    return rootNode.getElementById(this.id + \"::scrollPosition\") as HTMLInputElement;\n  }\n\n  getHiddenExpanded(): HTMLInputElement {\n    const rootNode = this.getRootNode() as ShadowRoot | Document;\n    return rootNode.getElementById(this.id + \"::expanded\") as HTMLInputElement;\n  }\n\n  /**\n   * Get the element, which indicates the selection\n   */\n  getSelectorCheckbox(row: HTMLTableRowElement): HTMLInputElement {\n    return row.querySelector(\"tr>td>input.tobago-sheet-columnSelector\");\n  }\n\n  getRowElements(): NodeListOf<HTMLTableRowElement> {\n    return this.getBodyTable().querySelectorAll(\"tbody>tr\");\n  }\n\n  getFirst(): number {\n    return parseInt(this.dataset.tobagoFirst);\n  }\n\n  isRowSelected(row: HTMLTableRowElement): boolean {\n    return this.isSelected(parseInt(row.dataset.tobagoRowIndex));\n  }\n\n  isSelected(rowIndex: number): boolean {\n    const value = <number[]>JSON.parse(this.getHiddenSelected().value);\n    return value.indexOf(rowIndex) > -1;\n  }\n\n  resetSelected():void {\n    this.getHiddenSelected().value = JSON.stringify([]);\n  }\n\n  toggleSelection(row: HTMLTableRowElement, checkbox: HTMLInputElement): void {\n    this.dataset.tobagoLastClickedRowIndex = String(row.sectionRowIndex);\n    if (checkbox && !checkbox.disabled) {\n      const selected = this.getHiddenSelected();\n      const rowIndex = Number(row.getAttribute(\"row-index\"));\n      if (this.isSelected(rowIndex)) {\n        this.deselectRow(selected, rowIndex, row, checkbox);\n      } else {\n        this.selectRow(selected, rowIndex, row, checkbox);\n      }\n    }\n  }\n\n  selectAll(): void {\n    const rows = this.getRowElements();\n    this.selectRange(rows, 0, rows.length - 1, true, false);\n  }\n\n  deselectAll(): void {\n    const rows = this.getRowElements();\n    this.selectRange(rows, 0, rows.length - 1, false, true);\n  }\n\n  toggleAll(): void {\n    const rows = this.getRowElements();\n    this.selectRange(rows, 0, rows.length - 1, true, true);\n  }\n\n  selectRange(\n      rows: NodeListOf<HTMLTableRowElement>, first: number, last: number, selectDeselected: boolean,\n      deselectSelected: boolean): void {\n    const selected = this.getHiddenSelected();\n    const value = new Set<number>(JSON.parse(selected.value));\n    for (let i = first; i <= last; i++) {\n      const row = rows.item(i);\n      const checkbox = this.getSelectorCheckbox(row);\n      if (checkbox && !checkbox.disabled) {\n        const rowIndex = Number(row.getAttribute(\"row-index\"));\n        const on = value.has(rowIndex);\n        if (selectDeselected && !on) {\n          this.selectRow(selected, rowIndex, row, checkbox);\n        } else if (deselectSelected && on) {\n          this.deselectRow(selected, rowIndex, row, checkbox);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param selected input-element type=hidden: Hidden field with the selection state information\n   * @param rowIndex int: zero based index of the row.\n   * @param row tr-element: the row.\n   * @param checkbox input-element: selector in the row.\n   */\n  selectRow(selected: HTMLInputElement, rowIndex: number, row: HTMLTableRowElement, checkbox: HTMLInputElement): void {\n    const selectedSet = new Set<number>(JSON.parse(selected.value));\n    selected.value = JSON.stringify(Array.from(selectedSet.add(rowIndex)));\n    row.classList.add(\"tobago-sheet-row-markup-selected\");\n    row.classList.add(\"table-info\");\n    checkbox.checked = true;\n    setTimeout(function ():void {\n      checkbox.checked = true;\n    }, 0);\n  }\n\n  /**\n   * @param selected input-element type=hidden: Hidden field with the selection state information\n   * @param rowIndex int: zero based index of the row.\n   * @param row tr-element: the row.\n   * @param checkbox input-element: selector in the row.\n   */\n  deselectRow(\n      selected: HTMLInputElement, rowIndex: number, row: HTMLTableRowElement, checkbox: HTMLInputElement): void {\n    const selectedSet = new Set<number>(JSON.parse(selected.value));\n    selectedSet.delete(rowIndex);\n    selected.value = JSON.stringify(Array.from(selectedSet));\n    row.classList.remove(\"tobago-sheet-row-markup-selected\");\n    row.classList.remove(\"table-info\");\n    checkbox.checked = false;\n    // XXX check if this is still needed... Async because of TOBAGO-1312\n    setTimeout(function (): void {\n      checkbox.checked = false;\n    }, 0);\n  }\n\n}\n\ndocument.addEventListener(\"tobago.init\", function (event: Event): void {\n  if (window.customElements.get(\"tobago-sheet\") == null) {\n    window.customElements.define(\"tobago-sheet\", Sheet);\n  }\n});\n"]}