{"version":3,"file":"tobago-polyfill.js","sourceRoot":"../ts/","sources":["tobago-polyfill.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;GAcG;AAEH,qHAAqH;AAErH,iCAAiC;AACjC,IAAI;IACF,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;CAClC;AAAC,OAAO,SAAS,EAAE;IAClB,MAAM,sBAAsB,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;IACzE,OAAO,CAAC,SAAS,CAAC,aAAa,GAAG,SAAS,aAAa,CAAC,SAAiB;QACxE,OAAO,sBAAsB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IACvD,CAAC,CAAC;IAEF,MAAM,yBAAyB,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;IAC/E,OAAO,CAAC,SAAS,CAAC,gBAAgB,GAAG,SAAS,gBAAgB,CAAC,SAAiB;QAC9E,OAAO,yBAAyB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC1D,CAAC,CAAC;IAEF,IAAI,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE;QAC7B,MAAM,gBAAgB,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAC7D,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,CAAC,SAAiB;YAC5D,OAAO,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACjD,CAAC,CAAC;KACH;IAED,IAAI,OAAO,CAAC,SAAS,CAAC,OAAO,EAAE;QAC7B,MAAM,gBAAgB,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAC7D,OAAO,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,CAAC,SAAiB;YAC5D,OAAO,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;QACjD,CAAC,CAAC;KACH;IAED,SAAS,QAAQ,CAAC,aAAkB;QAClC,MAAM,KAAK,GAAG,mBAAmB,CAAC;QAElC,OAAO,UAAU,QAAa;YAC5B,IAAI,QAAQ,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACjD,MAAM,IAAI,GAAG,sBAAsB,CAAC;gBACpC,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC;gBACzD,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBAC5B,MAAM,OAAO,GAAG,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;gBACrD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;gBAC3B,OAAO,OAAO,CAAC;aAChB;iBAAM;gBACL,OAAO,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;aAC7C;QACH,CAAC,CAAC;IACJ,CAAC;CACF;AAED,qHAAqH","sourcesContent":["/* Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// //////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// for old Edge (before Chromium)\ntry {\n  document.querySelector(\":scope\");\n} catch (exception) {\n  const querySelectorWithScope = polyfill(Element.prototype.querySelector);\n  Element.prototype.querySelector = function querySelector(selectors: string): Element {\n    return querySelectorWithScope.apply(this, arguments);\n  };\n\n  const querySelectorAllWithScope = polyfill(Element.prototype.querySelectorAll);\n  Element.prototype.querySelectorAll = function querySelectorAll(selectors: string): NodeListOf<Element> {\n    return querySelectorAllWithScope.apply(this, arguments);\n  };\n\n  if (Element.prototype.matches) {\n    const matchesWithScope = polyfill(Element.prototype.matches);\n    Element.prototype.matches = function matches(selectors: string): boolean {\n      return matchesWithScope.apply(this, arguments);\n    };\n  }\n\n  if (Element.prototype.closest) {\n    const closestWithScope = polyfill(Element.prototype.closest);\n    Element.prototype.closest = function closest(selectors: string): Element {\n      return closestWithScope.apply(this, arguments);\n    };\n  }\n\n  function polyfill(prototypeFunc: any): any {\n    const scope = /:scope(?![\\w-])/gi;\n\n    return function (selector: any): any {\n      if (selector.toLowerCase().indexOf(\":scope\") >= 0) {\n        const attr = \"tobagoScopeAttribute\";\n        arguments[0] = selector.replace(scope, \"[\" + attr + \"]\");\n        this.setAttribute(attr, \"\");\n        const element = prototypeFunc.apply(this, arguments);\n        this.removeAttribute(attr);\n        return element;\n      } else {\n        return prototypeFunc.apply(this, arguments);\n      }\n    };\n  }\n}\n\n// //////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n"]}